README - Εργασία 1
Ηλίας Καλαμάτας || 1115201400053
Εαρινό εξάμηνο - Ακαδημαϊκού έτους "2020-2021"

Η εργασία περιλαμβάνει δύο φακέλους:
- Bash_Script : Αρχεία σχετικά με τη δημιουργία bash script για την παραγωγή τυχαίων δεδομένων, που δίνονται ως είσοδος στην εφαρμογή
- App: Αρχεία σχετικά με την υλοποίηση όλων των λειτουργιών της εφαρμογής

** Μεταγλώτισση και Εκτέλεση **
- Για το bash script:
1. Ίσως χρειαστεί αλλαγή σε δικαιώματα, ώστε να μπορεί να πραγματοποιηθεί εκτέλεση -> chmod 777 testFile.sh
2. Παράδειγμα εκτέλεσης χωρίς duplicates -> ./testFile.sh virusesFile countriesFile 1000 0
3. Παράδειγμα εκτέλεσης με duplicates -> ./testFile.sh virusesFile countriesFile 1000 1

- Για την εφαρμογή:
1. Μεταγλώτισση -> g++ -std=c++11 -o vaccineMonitor *.cpp (έχει γίνει χρήση του atoi() επομένως για αυτό χρειαζόμαστε το extra ορισμα)
2. Εκτέλεση ./vaccineMonitor -c inputFile -b 100000 
Προσοχή: H εφαρμογή διαβάζει το αρχείο από τον φάκελο 'Bash_Script' και χρειάζεται μόνο το όνομα του

** Διαχωρισμός Αρχείων Εφαρμογής App **
1. InputHandler (.cpp + .h) --> Περιέχει κλάση με απαραίτητες μεθόδους για τη διαχείρηση εισόδου της εφαρμογής + Συνάρτηση για σύγκριση Dates
2. HashUtil (.cpp + .h) --> Περιέχει συναρτήσεις, που υλοποιούν Hashing Algorithms
3. CitizenRecords (.cpp + .h) --> Περιέχει κλάσεις σχετικές με την αποθήκευση δεδομένων
4. BloomFilter (.cpp + .h) --> Κλάσεις για την υλοποίηση του Bloom Filter και της λίστας των Bloom Filters 
5. SkipList (.cpp + .h) --> Κλάσεις για την υλοποίηση της Skip List και της λίστας των Skip Lists
6. main (.cpp) --> Η κύρια εφαρμογή (ανάγνωση δεδομένων + λειτουργίες εφαρμογής από είσοδο χρήστη)

** Γενικές 'Παραδοχές' και Επεξηγήσεις **
- Αποθήκευση ονοματεπώνυμου σε μία μεταβλητή
- Για το bash script:
	* Έλεγχος ορισμάτων -> περιλαμβάνει τα δύο αρχεία και έλεγχος για αριθμητικά ορίσματα
	* Έως 4 ψηφία σε IDs -> έλεγος για παραγωγή δεδομένων χωρίς duplicates, που ξεπερνάνε τις 10.000 εγγραφές
	* Αν το αρχείο υπάρχει ήδη ερώτηση για αντικατάσταση
	* Για παραγωγή διπλότυπων εγγραφών χρήση συνεχόμενα του ίδιου ID με πιθανότητα 10%
	* Στην παραγωγή διπλότυπων εγγραφών οι πρώτες δύο έχουν πάντα το ίδιο ID
	* Χρήση ηλικίας στον υπολογισμό της ημερομηνίας εμβολιασμού (δεν μπορεί να είναι μετά το 2020)
- Κατά την εκκίνηση της εφαρμογής γίνεται έλεγχος ορισμάτων -> Αριθμός και ύπαρξη "-c","-b" στις σωστές θέσεις
- Ανάγνωση του αρχείου και αποθήκευση δεδομένων
- Για την αποθήκευση δεδομένων χρησιμοποιείται Hash Table -> πληροφορίες πολιτών -> ID, fullname, χώρα και ηλικία
- Κάθε πολίτης εισάγεται μόνο μία φορα στο table (έλεγχος για duplicates) και η χώρα αποθηκεύεται με δείκτη σε string για αποφυγή επανάληψης πληροφορίας
- Οι χώρες αποθηκεύονται μία φορά σε μία λίστα στην οποία κρατάμε και την πληροφορία του συνολικού πληθυσμού της
- Ομοίως κρατάμε σε μία λίστα και τα ονόματα των ιών για γρήγορη αναζήτηση τους
- Όταν διαβάζεται μια εγγραφή με διπλότυπο ID εμφανίζεται μήνυμα λάθους αν τα υπόλοιπα στοιχεία δεν συμβαδίζουν με μία προηγούμενη εγγραφή
- Αν όμως έρθει δεύτερη φορά πληροφορία για εμβόλιο ιού υπάρχουσας εγγραφής κρατάμε την πρώτη και θεωρούμε κάθε επόμενη ως error
- Αν βρεθεί εγγραφή, που δεν έχει κάνει εμβόλιο, αλλά περιέχει ημερομηνία πάλι έχουμε μήνυμα λάθους
- Δημιουργείται μία λίστα που περιέχει ένα Bloom Filter για κάθε ιό και μια λίστα που περιέχει όλες τις skip list (δηλαδή και τα ΝΑΙ και τα ΟΧΙ)
- Έχει υλοποιηθεί η εντολή /help για την αναπαράσταση των λειτουργιών της εφαρμογής και κάποιον ενδείξεων προς το χρήστη
- Κατά την εισαγωγή μιας εντολής γίνεται έλεγχος για αριθμό ορισμάτων (max 9)
- Ελέγχεται αν το ID και η ηλικία είναι αριθμοί (ενημέρωση στο \help)
- Ελέγχεται αν ο ιός και η χώρα, που δίνονται, υπάρχουν ήδη στα δεδομένα
- Για την ημερομηνία ο έλεγχος δεν είναι 100% αυστηρός αλλά δεχόμαστε τα εξής:
	* Χωρίζεται με παύλες (ενημέρωση στο \help)
	* Πρέπει να ξεκινάει με αριθμό και να τελειώνει με 4 αριθμούς
	* Ελέγχεται η ύπαρξη παύλας μετά τη μέρα και πριν τη χρονολογία
	* Δεχόμαστε ότι εφόσον ισχύουν τα παραπάνω λογικά θα πρέπει να έχει δοθεί σωστά
- Οι ημερομηνίες στις λειτουργίες με τα ποσοστά είναι προεραιτικές
- Για οτιδήποτε διαφορετικό με τα παραπάνω εμφανίζεται μήνυμα λάθους
- Για την εντολή εισαγωγής εγγραφής:
	* Έλεγχος εγκυρότητας εγγραφής
	* Πέρα από τους ελέγχους, που αναφέραμε -> ΝΑΙ χωρίς ημερομηνία -> error
	* Αν για το συγκεκριμένο ιό δεν έχουμε κάποια πληροφορία για αυτόν τον άνθρωπο, προσθέτουμε στην κατάλληλη λίστα
	* Αν έχουμε ΟΧΙ και έρθει ΟΧΙ δεν κάνουμε τίποτα
	* Αν έχουμε ΟΧΙ και έρθει ΝΑΙ αφαιρούμε από το ΟΧΙ και προσθέτουμε στο ΝΑΙ
	* Αν έχουμε ΝΑΙ είτε έρθει ΝΑΙ είτε ΟΧΙ -> error (ήδη εμβολιασμένος - δεν γίνεται να ξε-εμβολιαστεί)
- Παρόμοια λειτουργικότητα για την εντολή εμβολιασμού
